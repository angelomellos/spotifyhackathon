Array.prototype.deepIndexOf = function(value,key,depth){
  var keyProvided = (key !== undefined && key !== null);
  var depthProvided = (depth !== undefined && depth !== null);
  var entries={};
  var i=0;
  var length=0;
  var zeroIndex;
  if(this.some(function(entry,index){
    if(value===(keyProvided?entry[key]:entry)){
      zeroIndex=index;
      return true;
    }
    if(typeof entry==='object'){
      for(var entryKey in entry){
        if(entry.hasOwnProperty(entryKey)&&
          (!depthProvided||0<depth)){
            entries[length]={'index':index,
                          'depth': 1,
                          'value':entry[entryKey]};
            length++;
        }
      }
    }
  })) return zeroIndex;
  while(i<length){
    var entry=entries[i];
    var entryValue=entry.value;
    if(value===(keyProvided?entryValue[key]:entryValue)){
      return entry.index;
    }
    if(typeof entryValue==='object'){
      for(var entryKey in entryValue){
        if(entryValue.hasOwnProperty(entryKey)&&
          (!depthProvided||entry.depth<depth)){
            entries[length]={'index':entry.index,
                          'depth': entry.depth+1,
                          'value':entryValue[entryKey]};
            length++;
        }
      }
    }
    delete entries[i];
    i++;
  }
  return -1;
};